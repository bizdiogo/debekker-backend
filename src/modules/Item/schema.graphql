type Query {
  itemTranslation(where: ItemTranslationWhereUniqueInput!): ItemTranslation
  itemTranslations(
    where: ItemTranslationWhereInput
    orderBy: ItemTranslationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [ItemTranslation]!
  itemTranslationsConnection(
    where: ItemTranslationWhereInput
    orderBy: ItemTranslationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ItemTranslationConnection!
}

type Mutation {
  createItemTranslation(data: ItemTranslationCreateInput!): ItemTranslation!
  updateItemTranslation(
    data: ItemTranslationUpdateInput!
    where: ItemTranslationWhereUniqueInput!
  ): ItemTranslation
  deleteItemTranslation(
    where: ItemTranslationWhereUniqueInput!
  ): ItemTranslation
}

type Subscription {
  itemTranslation(
    where: ItemTranslationSubscriptionWhereInput
  ): ItemTranslationSubscriptionPayload
}

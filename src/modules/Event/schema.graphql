# import Event from "../../generated/prisma.graphql"

type Query {
  event(where: EventWhereUniqueInput!): Event
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event]!
  eventsConnection(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EventConnection!
  eventsCalendar(startTime: DateTime, endTime: DateTime, name: String): [Event]!
}

type Mutation {
  createEvent(data: EventCreateInput!): Event!
  updateEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event
  deleteEvent(where: EventWhereUniqueInput!): Event
}

type Subscription {
  event(where: EventSubscriptionWhereInput): EventSubscriptionPayload
}
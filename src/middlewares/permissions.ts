import { rule, shield } from 'graphql-shield'
import { getAuthPayload } from '../utils'

const isAuthenticated = rule()(async (resolve, args, ctx, info) => {
  return !!getAuthPayload(ctx)
})

export default shield({
  Query: {
    me: isAuthenticated,
    users: isAuthenticated,
    user: isAuthenticated,
    usersConnection: isAuthenticated,
    vehicles: isAuthenticated,
    vehicle: isAuthenticated,
    vehiclesConnection: isAuthenticated,
    vehiclesAvailable: isAuthenticated,
    taxes: isAuthenticated,
    tax: isAuthenticated,
    taxesConnection: isAuthenticated,
    places: isAuthenticated,
    place: isAuthenticated,
    placesConnection: isAuthenticated,
    placeContacts: isAuthenticated,
    placeContact: isAuthenticated,
    placeContactsConnection: isAuthenticated,
    offers: isAuthenticated,
    offer: isAuthenticated,
    offersConnection: isAuthenticated,
    jobs: isAuthenticated,
    job: isAuthenticated,
    jobsConnection: isAuthenticated,
    items: isAuthenticated,
    item: isAuthenticated,
    itemsConnection: isAuthenticated,
    eventTypes: isAuthenticated,
    eventType: isAuthenticated,
    eventTypesConnection: isAuthenticated,
    events: isAuthenticated,
    event: isAuthenticated,
    eventsConnection: isAuthenticated,
    clients: isAuthenticated,
    client: isAuthenticated,
    clientsConnection: isAuthenticated,
    clientContacts: isAuthenticated,
    clientContact: isAuthenticated,
    clientContactsConnection: isAuthenticated,
    communications: isAuthenticated,
    communication: isAuthenticated,
    communicationsConnection: isAuthenticated,
    employees: isAuthenticated,
    employee: isAuthenticated,
    employeesConnection: isAuthenticated,
    employeeEstimations: isAuthenticated,
    employeeEstimation: isAuthenticated,
    employeeEstimationsConnection: isAuthenticated,
    sectionItems: isAuthenticated,
    sectionItem: isAuthenticated,
    sectionItemsConnection: isAuthenticated,
    eventsLast30Days: isAuthenticated,
    eventsNext30Days: isAuthenticated,
    eventsToday: isAuthenticated,
    currentOffers: isAuthenticated,
    countClients: isAuthenticated
  },
  Mutation: {
    createUser: isAuthenticated,
    updateUser: isAuthenticated,
    deleteUser: isAuthenticated,
    createVehicle: isAuthenticated,
    updateVehicle: isAuthenticated,
    deleteVehicle: isAuthenticated,
    createTax: isAuthenticated,
    updateTax: isAuthenticated,
    deleteTax: isAuthenticated,
    createPlace: isAuthenticated,
    updatePlace: isAuthenticated,
    deletePlace: isAuthenticated,
    createPlaceContact: isAuthenticated,
    updatePlaceContact: isAuthenticated,
    deletePlaceContact: isAuthenticated,
    createOffer: isAuthenticated,
    updateOffer: isAuthenticated,
    deleteOffer: isAuthenticated,
    createJob: isAuthenticated,
    updateJob: isAuthenticated,
    deleteJob: isAuthenticated,
    createItem: isAuthenticated,
    updateItem: isAuthenticated,
    deleteItem: isAuthenticated,
    createEventType: isAuthenticated,
    updateEventType: isAuthenticated,
    deleteEventType: isAuthenticated,
    createEvent: isAuthenticated,
    updateEvent: isAuthenticated,
    deleteEvent: isAuthenticated,
    createClient: isAuthenticated,
    updateClient: isAuthenticated,
    deleteClient: isAuthenticated,
    createClientContact: isAuthenticated,
    updateClientContact: isAuthenticated,
    deleteClientContact: isAuthenticated,
    createCommunication: isAuthenticated,
    updateCommunication: isAuthenticated,
    deleteCommunication: isAuthenticated,
    createEmployee: isAuthenticated,
    updateEmployee: isAuthenticated,
    deleteEmployee: isAuthenticated,
    createEmployeeEstimation: isAuthenticated,
    updateEmployeeEstimation: isAuthenticated,
    deleteEmployeeEstimation: isAuthenticated,
    createSectionItem: isAuthenticated,
    updateSectionItem: isAuthenticated,
    deleteSectionItem: isAuthenticated
  },
  Subscription: {
    user: isAuthenticated,
    vehicle: isAuthenticated,
    tax: isAuthenticated,
    place: isAuthenticated,
    placeContact: isAuthenticated,
    offer: isAuthenticated,
    job: isAuthenticated,
    item: isAuthenticated,
    eventType: isAuthenticated,
    event: isAuthenticated,
    client: isAuthenticated,
    clientContact: isAuthenticated,
    communication: isAuthenticated,
    employee: isAuthenticated,
    employeeEstimation: isAuthenticated
  }
})
